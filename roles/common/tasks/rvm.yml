---
- name: Detect rvm binary
  stat: path='{{ rvm_root }}/bin/rvm'
  register: rvm_binary

- name: Detect rvm installer
  stat: path='/tmp/rvm-installer.sh'
  register: rvm_installer

- name: Detect current rvm version
  command: '{{ rvm_root }}/bin/rvm version'
  changed_when: False
  register: rvm_current_version
  when: rvm_binary.stat.exists

- name: Install rvm installer
  get_url:
    url: 'https://raw.githubusercontent.com/wayneeseguin/rvm/master/binscripts/rvm-installer'
    dest: '/tmp/rvm-installer.sh'
  when: not rvm_installer.stat.exists

- name: Configure rvm installer
  file:
    path: '/tmp/rvm-installer.sh'
    mode: 0755
  when: not rvm_binary.stat.exists

- name: Import GPG keys
  command: 'gpg --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3'
  changed_when: False

- name: Install rvm
  command: >
    /tmp/rvm-installer.sh stable
    --path {{ rvm_root }} --auto-dotfiles
  when: not rvm_binary.stat.exists

- name: Update rvm
  shell: '{{ rvm_root }}/bin/rvm get stable && {{ rvm_root }}/bin/rvm reload'
  changed_when: False
  when: rvm_binary.stat.exists

- name: Configure rvm
  command: '{{ rvm_root }}/bin/rvm autolibs 3'
  when: not rvm_binary.stat.exists

- name: Detect if ruby version is installed
  stat: path={{ rvm_root }}/rubies/{{ ruby_version }}
  register: installed_ruby_version

- name: ensure ruby is installed
  command: "{{ rvm_root }}/bin/rvm install {{ ruby_version }}"
  when: not installed_ruby_version.stat.exists

- name: Detect default ruby version
  command: '{{ rvm_root }}/bin/rvm alias list default'
  changed_when: False
  register: detect_default_ruby_version

- name: Select default ruby
  command: '{{ rvm_root }}/bin/rvm alias create default {{ ruby_version }}'
  when: detect_default_ruby_version.stdout == '' or
        ruby_version not in detect_default_ruby_version.stdout

- name: Install bundler if not installed
  shell: >
    {{ rvm_root }}/wrappers/{{ ruby_version }}/gem list
    | if ! grep "^bundler " ; then {{ rvm_root }}/wrappers/{{ ruby_version }}/gem install bundler ; fi
  args:
    creates: '{{ rvm_root }}/wrappers/{{ ruby_version }}/bundler'
  register: bundler_install
  changed_when: '"Successfully installed bundler" in bundler_install.stdout'

- name: Create rvm.sh
  template: src=rvm.sh.j2 dest=/etc/profile.d/rvm.sh owner=root group=root mode=0755
